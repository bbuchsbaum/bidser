% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/mock_bids.R
\name{func_scans}
\alias{func_scans}
\alias{func_scans.mock_bids_project}
\title{Get functional scans from a BIDS project}
\usage{
func_scans(x, ...)

\method{func_scans}{mock_bids_project}(
  x,
  subid = ".*",
  task = ".*",
  run = ".*",
  session = ".*",
  kind = "bold",
  suffix = "nii(\\\\.gz)?$",
  full_path = TRUE,
  ...
)
}
\arguments{
\item{x}{A mock_bids_project object}

\item{...}{Additional arguments passed to search_files}

\item{subid}{Regex to match subject IDs (default: ".*")}

\item{task}{Regex to match tasks (default: ".*")}

\item{run}{Regex to match runs (default: ".*")}

\item{session}{Regex to match sessions (default: ".*")}

\item{kind}{Type of functional data (default: "bold")}

\item{suffix}{Regex pattern for file suffix (default: "nii(\\.gz)?$")}

\item{full_path}{If TRUE, return full file paths (default: TRUE)}
}
\value{
A character vector of file paths to functional scans matching the criteria.
Returns NULL if no matching files are found.
}
\description{
This function extracts functional scan files from a BIDS project that match specified
criteria such as subject ID, task name, run number, and session. It can return either
full paths or relative paths to the files.
}
\examples{
# Create a BIDS project object
proj <- bids_project(system.file("extdata/ds001", package="bidser"))

# Get all functional scans
all_scans <- func_scans(proj)

# Get scans for specific subjects
sub_scans <- func_scans(proj, subid="sub-0[123]")

# Get scans for a specific task and run
task_scans <- func_scans(proj, 
                        task="balloonanalogrisktask",
                        run="01")

# Get scans with relative paths
rel_scans <- func_scans(proj, full_path=FALSE)

# Get scans from a project with sessions
ds007 <- bids_project(system.file("extdata/ds007", package="bidser"))
session_scans <- func_scans(ds007, session="test")

}
