% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_helpers.R
\name{gen_lit}
\alias{gen_lit}
\title{Create a parser that matches a fixed pattern of type followed by suffix}
\usage{
gen_lit(type, suffix, extractor)
}
\arguments{
\item{type}{A literal for the type (e.g., "bold", "T1w").}

\item{suffix}{A literal for the suffix (e.g., ".nii.gz", ".tsv").}

\item{extractor}{A function to extract matched fields from the filename.}
}
\value{
A parser function that matches \code{type} followed by \code{suffix}. The parser returns:
\itemize{
\item A list with the matched components if successful
\item NULL if the pattern doesn't match
}
}
\description{
This function creates a parser that matches a fixed pattern of type followed by suffix,
used internally to match specific BIDS file patterns. The parser uses a provided extractor
function to extract matched fields from the filename.
}
\examples{
# Create a parser for BOLD files
bold_parser <- gen_lit("bold", ".nii.gz", function(x) list(type="bold"))
bold_parser("sub-01_task-rest_bold.nii.gz")  # Returns list(type="bold")
bold_parser("sub-01_T1w.nii.gz")  # Returns NULL (no match)

# Create a parser for T1w files
t1w_parser <- gen_lit("T1w", ".nii.gz", function(x) list(type="T1w"))
t1w_parser("sub-01_T1w.nii.gz")  # Returns list(type="T1w")

# Create a parser for event files
event_parser <- gen_lit("events", ".tsv", function(x) list(type="events"))
event_parser("sub-01_task-rest_events.tsv")  # Returns list(type="events")

}
\keyword{internal}
